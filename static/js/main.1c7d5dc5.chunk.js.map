{"version":3,"sources":["Components/Navigation.js","Components/Instructions.js","Components/Footer.js","Components/RandomQuote.js","Components/BookFinder.js","Components/BookList.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","Container","className","to","Instructions","Footer","RandomQuote","useState","randomQuote","setRandomQuote","makeAPICall","fetch","then","res","json","data","Math","floor","random","length","useEffect","text","author","onClick","BookFinder","props","book","setBook","result","setResult","searchResultsHTML","map","volumeInfo","imageLinks","src","thumbnail","alt","title","authors","addBookToList","id","onSubmit","event","preventDefault","items","onChange","target","value","type","placeholder","BookList","myListHTML","readingList","index","console","log","href","infoLink","rel","removeBook","App","setReadingList","indexToRemove","newList","filter","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1c7d5dc5.chunk.js","sourcesContent":["import {  Container } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nfunction Navigation() {\n  \n  return (\n      <Container>\n        <div className=\"nav\">\n          <h1>BookListBuilder</h1>\n          <ul>\n            <Link to='/'><li>Home</li></Link>\n            <Link to='/mylist'><li>My Lists</li></Link>\n          </ul>\n        </div>\n      </Container>\n  )\n\n  // return (\n  //   <div className=\"nav\">\n  //     <h1>BookListBuilder</h1>\n  //     <ul>\n  //       <Link to='/'><li>Home</li></Link>\n  //       <Link to='/mylist'><li>My Lists</li></Link>\n  //     </ul>\n  //   </div>\n  // );\n}\n  \n  export default Navigation;","import { Container } from 'react-bootstrap'\n\nfunction Instructions() {\n    return (\n      <Container>\n        <div className=\"instructions\">\n          <h2>Welcome</h2>\n          <p>Use BookListBuilder to mad books and create a reading list. Not sure what you're looking for? Generate a random quote above and see if anyone's famous words leave you curious for more.</p>\n        </div>\n      </Container>\n    );\n  }\n  \n  export default Instructions;\n\n  // git remote add origin https://github.com/damonpickett/react-booklistbuilder.git\n  // git branch -M main\n  // git push -u origin main","import { Link } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\n\nfunction Footer() {\n    return (\n      <Container>\n        <div className=\"footer\">\n          <ul>\n            <Link to='/'><li>Home</li></Link>\n            <Link to='/mylist'><li>My Lists</li></Link>\n          </ul>\n        </div>\n      </Container>\n    );\n  }\n  \n  export default Footer;","import { useState, useEffect } from \"react\";\nimport { Container } from 'react-bootstrap'\n\nfunction RandomQuote() {\n\n  // create a useState\n  const [randomQuote, setRandomQuote] = useState('');\n\n\n  // Call the api - makeAPICall - fetch within this function\n  const makeAPICall = () => {\n    fetch(\"https://type.fit/api/quotes\")\n      .then((res) => res.json())\n      .then((data) => {\n        setRandomQuote(data[Math.floor(Math.random()*data.length)])\n      })\n  }\n\n  // console.log(randomQuote)\n\n  // create a useEffect\n  useEffect(() => {\n    makeAPICall();\n  }, [])\n\n  return (\n    <Container>\n      <div className=\"random-quote\">\n        <h2>Random Quote</h2>\n        <p>{randomQuote.text}</p>\n        <p>{randomQuote.author}</p>\n        <button onClick={makeAPICall}>New Quote</button>\n      </div>\n    </Container>\n  );\n  }\n  \n  export default RandomQuote;\n\n  // put api calls in makeAPICall and then fetch within that function. \n  // Set the state after the fetch. \n  // Call the makeAPIFunction within useEffect to stop the page from rerendering","import { useState } from \"react\";\nimport { Container } from 'react-bootstrap'\n\nfunction BookFinder(props) {\n\n\n  const [book, setBook] = useState('');\n  const [result, setResult] = useState([])\n  const apiKey = 'AIzaSyCUAkQ_kTnVDaR6bOZL_1efEXJbVWwwx6c'\n\n  function handleChange(event) {\n    const book = event.target.value;\n    setBook(book)\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    fetch(`https://www.googleapis.com/books/v1/volumes?q=${book}&key=${apiKey}&maxResults=20`)\n      .then(res => res.json())\n      .then(data => {\n        // console.log(data.items)\n        setResult(data.items)\n      })\n  }\n\n  const searchResultsHTML = result.map(book => {\n    return(\n      <div className='book-card' key={book.id}>\n        {book.volumeInfo.imageLinks ? <img src={book.volumeInfo.imageLinks.thumbnail} alt={book.volumeInfo.title}/> : <p>No image available<br />{book.volumeInfo.title} by {book.volumeInfo.authors}</p>}\n        <button onClick={() => props.addBookToList(book)}>Add to Reading List</button>\n        {/* <p key={book.id}>{book.volumeInfo.description}</p> */}\n      </div>\n    )\n  })\n\n  \n\n  return (\n    <Container>\n      <div className=\"book-finder\">\n        {/* create a form with input and button */}\n        <form onSubmit={handleSubmit}>\n          <input onChange={handleChange} type=\"text\" placeholder=\"Search for books\" />\n          <button type=\"submit\">Search</button>\n        </form>\n        {searchResultsHTML}\n      </div>\n    </Container>\n  );\n}\n  \n  export default BookFinder;\n\n  // used https://www.youtube.com/watch?v=LGcgChoD_qY&t=740s as a guide for this component","import { Container } from \"react-bootstrap\";\n\nfunction BookList(props) {\n\n  let myListHTML = props.readingList.map((book, index) => {\n    console.log(index)\n    return (\n      <div className=\"book-list\">\n        <h2>My Reading List</h2>\n        <h3>{book.volumeInfo.title}</h3>\n        <p>By {book.volumeInfo.authors}</p>\n        <p><a href={book.volumeInfo.infoLink} rel='noreferrer' target='_blank'>Buy</a></p>\n        <button onClick={() => props.removeBook(index)}>Remove book from list</button>\n      </div>\n    )\n  })\n\n  console.log(myListHTML)\n\n  return (\n    <>\n      <Container>\n        {myListHTML}\n      </Container>\n    </>\n  );\n}\n\nexport default BookList;\n\n// () => {\n//   return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__[\"jsxDEV\"])(\"p\", {\n//     children: \"copyList is working\"\n//   }, void 0, false, {\n//     fileName: _jsxFileName,\n//     lineNumber: 32,\n//     columnNumber: 7\n//   }, this);\n// }","import './App.css';\nimport Navigation from './Components/Navigation';\nimport Instructions from './Components/Instructions';\nimport Footer from './Components/Footer';\nimport RandomQuote from './Components/RandomQuote';\nimport BookFinder from './Components/BookFinder';\nimport BookList from './Components/BookList';\nimport { useState } from \"react\";\nimport { Route } from \"react-router-dom\";\n\nfunction App() {\n\n  const [readingList, setReadingList] = useState([]);\n\n  const addBookToList = (book) => {\n    console.log(book);\n    setReadingList([...readingList, book])\n  }\n\n  const removeBook = (indexToRemove) => {\n    let newList = readingList.filter((book, index) => {\n      // console.log(index)\n      return index !== indexToRemove\n    })\n    // console.log(newList)\n    setReadingList(newList)\n  }\n\n  return (\n    <div className=\"App\">\n      <Navigation />\n      <RandomQuote />\n      <Route exact path='/' render={() => <Instructions />}/>\n      <Route exact path='/' render={() => <BookFinder addBookToList={addBookToList} />}/>\n      <Route exact path='/mylist' render={() => <BookList removeBook={removeBook} readingList={readingList} />}/>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter as Router} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}